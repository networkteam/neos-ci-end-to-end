prototype(Neos.Demo:Document.Fragment.Menu.Language) < prototype(Neos.Fusion:Component) {
    menuItems = Neos.Neos:DimensionsMenuItems {
        dimension = 'language'
    }

    renderer = afx`
        <div class="language-menu">
            <div>
                <Neos.Fusion:Loop items={props.menuItems}>
                    <span @if.isCurrent={item.state == 'current'} class="language-menu-full">{item.label}</span>
                    <span @if.isCurrent={item.state == 'current'} class="language-menu-short" title={item.label}>{Configuration.setting('Neos.ContentRepository.contentDimensions.language.presets.' + item.targetDimensions.language.value + '.uriSegment')}</span>
                </Neos.Fusion:Loop>
                <span>â–¼</span>
            </div>
            <ul>
                <Neos.Fusion:Loop items={props.menuItems}>
                    <li @if.hasNode={item.node}>
                        <Neos.Neos:NodeLink node={item.node} >
                            <span class="language-menu-full">{item.label}</span>
                            <span class="language-menu-short" title={item.label}>{Configuration.setting('Neos.ContentRepository.contentDimensions.language.presets.' + item.targetDimensions.language.value + '.uriSegment')}</span>
                        </Neos.Neos:NodeLink>
                    </li>
                    <li @if.hasNoNode={!item.node}>
                        <span class="language-menu-full">{item.label}</span>
                        <span class="language-menu-short" title={item.label}>{Configuration.setting('Neos.ContentRepository.contentDimensions.language.presets.' + item.targetDimensions.language.value + '.uriSegment')}</span>
                    </li>
                </Neos.Fusion:Loop>
            </ul>
        </div>
    `

    @cache {
        mode = 'cached'
        entryIdentifier {
            documentNode = ${documentNode}
        }
        entryTags {
            1 = ${Neos.Caching.nodeTypeTag('Neos.Neos:Document', documentNode)}
        }
    }
}
