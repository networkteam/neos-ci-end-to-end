##
# "ChapterMenu" element
#
prototype(Neos.Demo:Content.ChapterMenu) < prototype(Neos.Neos:ContentComponent) {
    chapters = Neos.Fusion:Map {
        items = ${q(documentNode).children('[instanceof Neos.Demo:Document.Chapter]').get()}
        itemName = 'chapter'
        itemRenderer = Neos.Fusion:DataStructure {
            @context.chapterImage =  ${q(chapter).property('chapterImage')}
            link = Neos.Neos:NodeUri {
                node = ${chapter}
            }
            title = ${q(chapter).property('title')}
            imageSrc = Neos.Fusion:Case {
                hasImage {
                    condition = ${chapterImage}
                    renderer = Neos.Neos:ImageUri {
                        asset = ${chapterImage}
                        maximumWidth = 100
                        maximumHeight = 100
                    }
                }
                fallback {
                    condition = true
                    renderer = Neos.Fusion:ResourceUri {
                        package = 'Neos.Neos'
                        path= 'Images/dummy-image.png'
                    }
                }
            }
            imageAlt = ${alternativeText ? alternativeText.title : ''}
            imageTitle = ${chapterImage ? chapterImage.title : ''}
            description =  ${q(chapter).property('chapterDescription')}
        }
    }

    renderer = afx`
        <div class="chapter-menu">
            <ul>
                <Neos.Fusion:Loop items={props.chapters} itemName="chapter">
                    <li>
                        <img
                            src={chapter.imageSrc}
                            title={chapter.imageTitle}
                            alt={chapter.imageAlt}
                        />
                        <a href={chapter.link}>{chapter.title}</a>
                        <p class="text-muted" @if.has={chapter.description}>
                            {chapter.description}
                        </p>
                    </li>
                </Neos.Fusion:Loop>
            </ul>
        </div>
    `
}
