.neos-job:
  extends: .component-job
  variables:
    COMPONENT: neos
  before_script:
    - !reference [.docker-build-default, before_script]
    - export COMPOSER_CACHE_DIR=${CI_PROJECT_DIR}/.composer
    - cd neos

# Build frontend assets
neos:assets:
  extends: .neos-job
  stage: build
  needs: []
  dependencies: []
  image: registry.networkteam.com/networkteam/build/assets:node-16
  script:
    - yarn install
    - yarn neos:build
  cache:
    key: "js"
    paths:
      - .yarn/cache
      - .yarn/unplugged
  artifacts:
    paths:
      - neos/DistributionPackages/Neos.Demo/Resources/Public/Scripts
      - neos/DistributionPackages/Neos.Demo/Resources/Public/Styles

# Install Composer dependencies
neos:composer:
  extends: .neos-job
  stage: build
  # Depend on asset output for correct usage of built assets when Composer copies local packages
  needs:
    - neos:assets
  dependencies:
    - neos:assets
  image: registry.networkteam.com/networkteam/build/php:8.1
  script:
    # COMPOSER_MIRROR_PATH_REPOS is important to prevent issues with symlinks in containers (if packages in monorepo are required)
    - COMPOSER_MIRROR_PATH_REPOS=1 composer install
  cache:
    key: "php"
    paths:
      - .composer
  artifacts:
    paths:
      - neos/bin/
      - neos/Build/
      - neos/Packages
      - neos/Configuration
      - neos/Web
      - neos/flow

# Lint PHP code with Psalm
neos:psalm:
  extends: .neos-job
  stage: test
  needs:
    - neos:composer
  dependencies:
    - neos:composer
  image: registry.networkteam.com/networkteam/build/php:8.1
  script:
    # Ignore Psalm exit code due to code issues
    - bin/psalm --report=Build/Report/psalm.txt || true
  artifacts:
    paths:
      - neos/Build/Report/psalm.txt

# Report Psalm errors in merge request
neos:psalm:report:
  extends: .neos-job
  stage: test
  needs:
    - neos:psalm
  dependencies:
    - neos:psalm
  image: registry.networkteam.com/networkteam/docker/reviewdog:latest
  script:
    - reviewdog -f=psalm -reporter=gitlab-mr-discussion -diff='git diff HEAD~' -filter-mode=file < Build/Report/psalm.txt
  rules:
  # Only report for merge requests
  - if: $CI_MERGE_REQUEST_ID
    changes:
      - .gitlab-ci.yml
      - ci/gitlab/$COMPONENT.yml
      - $COMPONENT/**/*

# Build docker image for PHP FPM
neos:docker:
  extends:
    - .neos-job
    - .docker-build
  stage: docker-build
  needs:
    - neos:composer
    - neos:assets
  dependencies:
    - neos:composer
    - neos:assets
  variables:
    # Note: Kaniko build script uses another env var for the project component
    PROJECT_COMPONENT: neos

# Copy latest docker image for component if no changes occurred
neos:copy-docker:
  extends: .component-dockercopy-job
  variables:
    COMPONENT: neos

neos:acceptance:
  # TODO Remove once it passes
  allow_failure: true
  extends: .neos-job
  stage: acceptance
  dependencies: []
  needs:
    - job: deploy:integration
      optional: true
    - job: deploy:review
      optional: true
  image: mcr.microsoft.com/playwright:v1.21.1-focal
  rules:
  - if: $CI_MERGE_REQUEST_ID
    variables:
      RELEASE_NAME: $CI_COMMIT_REF_SLUG
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    variables:
      RELEASE_NAME: integration
  script:
    - export BASE_URL=https://neos-demo-$RELEASE_NAME.k.networkteam.com
    - yarn install
    - yarn test
  artifacts:
    when: always
    paths:
      - neos/test-results
    expire_in: 14 days
    reports:
      junit: neos/test-results/report.xml
  cache:
    key: "js"
    paths:
      - .yarn/cache
      - .yarn/unplugged
