deploy:integration:
  extends: .helm-deploy-job
  # Use Helm image and run chart in ci/helm with overrides from env vars
  image: $HELM_IMAGE
  stage: deploy
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  environment:
    name: integration
    url: https://neos-demo-integration.k.networkteam.com
  variables:
    RELEASE_NAME: integration
  script:
    - |
      cat <<EOF > overrides.yaml
      neos:
        php:
          env:
            NEOS_CREATE_ADMIN_USER_NAME: admin
            NEOS_CREATE_ADMIN_USER_PASSWORD: password
            NEOS_IMPORT_SITE_PACKAGE_KEY: 'Neos.Demo'
        ingress:
          hostnames:
            - neos-demo-$RELEASE_NAME.k.networkteam.com
          tls:
            - secretName: wildcard-k-networkteam-com
              hosts:
                - neos-demo-$RELEASE_NAME.k.networkteam.com

      default:
        image:
          tag: $CI_REGISTRY_TAG
        ingress:
          annotations:
            nginx.ingress.kubernetes.io/auth-realm: Authentication Required
            nginx.ingress.kubernetes.io/auth-secret: basic-auth
            nginx.ingress.kubernetes.io/auth-type: basic
            nginx.ingress.kubernetes.io/configuration-snippet: |
              add_header X-Robots-Tag "noindex, nofollow";
              # Basic auth whitelist
              satisfy any;
              allow 192.168.0.0/16;
              allow 10.233.0.0/16;
        annotations:
          app.gitlab.com/env: $CI_ENVIRONMENT_SLUG
          app.gitlab.com/app: $CI_PROJECT_PATH_SLUG

      postgres:
        enabled: true

      EOF
    # Make sure the previous release is completely removed
    - helm delete $RELEASE_NAME > /dev/null 2>&1 || echo "No previous release found"
    # Install the chart and wait until everything is ready, otherwise print logs of failed pods and fail the build
    - |
      (helm install --wait -f overrides.yaml $RELEASE_NAME . && echo "Done.") \
      || (inspect-failed-release $RELEASE_NAME && false)